<div> 
  {{>navbar/nav}}
</div>
<div class="grid-container">
    <div class="grid-x grid-padding-x">
      <div class="medium-8 cell">
        <h3> Team Challenge</h3>
      </div>
    </div>
</div>

<form class="challenge-form">
  <div class="grid-container">
    <div class="grid-x grid-padding-x">
      <div class="medium-4 cell">
        {{!-- <label> Team 1   --}}
          <select>
          {{#each team}}
              <option >{{team.teams}}</option>
            {{/each}} 
          </select>
        {{!-- </label>   --}}
      </div>
      <div class="medium-4 cell">
        {{!-- <label>Select Team  --}}
          <select>
            {{#each team}}
              <option >{{team.teams}}</option>
            {{/each}} 
          </select>
        {{!-- </label>   --}}
      </div>
      <div class ='medium-4 cell'> 
        <input for='challengeSubmit' type="submit" value="Challenge">
      </div>
    </div>
  </div>
</form>

<div class="challenge-results" > 
</div>


<div id = "animation">
    <img src="/assets/img/WNBA.png" class='player'>
    <img src="/assets/img/ball.png" class="basketball">
    {{!-- <img src="/assets/img/basketballgoal.png"class="hoop"> --}}

</div>
<div id="basketball"></div>
<svg xmlns="http://www.w3.org/2000/svg" width="645" height="525" viewBox="0 0 645 525">
  <g id="Ellipse_1" data-name="Ellipse 1" opacity ='0' fill="none" stroke="#707070" stroke-width="1">
    <ellipse cx="222.5" cy="-20.5" rx="322.5" ry="262.5" stroke="none"/>
    <ellipse cx="352.5" cy="-150.5" rx="322" ry="262" fill="none"/>
  </g>
</svg>

<style>
  .basketball{
    position: absolute;
    left: 600px;
    top: 450px;
  }
  .hoop {
    position: absolute;
    right: 530px;
    bottom: 100px;
    
  }
  .player{
    position: absolute;
    left: 400px;
    top: 500px;
  }
</style>

<script> 
$(document).ready(function (){


  var resultsDiv = $(".challenge-results");
  var resultsCard = $('<div>');
  var cardDivider = $("<div>");
  var cardSection = $("<div>");

  $(".challenge-form").on("submit", function (event) {
    event.preventDefault();
    console.log("clicked");
    
    createResultsCard();
    
  });
   
  //compare teams function 
  function compareTeams(){

    $.get("/api/player", function(req,res) {
      if(req.params.player) {
        db.Player.findAll({
          where: {
            team_id: req.params.team_id
          }.then(function(result) {
            return res.json ({
                points: points, 
                rebounds: rebounds,
                assist: assist,
                steal: steal,
                block: block
            })
          })
        });
      };
    });


      var teamOne = [95, 20, 14, 8, 2];
      var teamTwo = [100, 12, 20, 10, 4];

      function average(score) {
      var total = 0;
      for(var i = 0; i < stats.length; i++){
        total += stats[i];
    
      
      var avg = total/stats.length
      return avg;

      var teamOneAvg = average(teamOne);
      var teamTwoAvg = average(teamTwo);
      var winner;
      
      if(teamOneAvg > teamTwoAvg) {
        winner = "Team One";
      }else if (teamOneAvg < teamTwoAvg) {
        winner = "Team Two";
      }else {
        winner = "It's a tie!";
      }
      return ("Team One's average score was" + teamOneAvg && "Team Two's average score was" + teamTwoAvg);
      }
      }
  };


   //create the results card 
  function createResultsCard(){

    resultsDiv.html("");
    //create tag 
 
  // attributes
    $(resultsDiv).attr("style", "margin: auto, width: 50%,padding: 10px")
    $(resultsCard).attr("class", "card");
    $(cardDivider).attr("class","card-divider");
    $(cardSection).attr("class", "card-section");

  //text for tag 
    $(cardDivider).text("Winner: Team Name ");
    $(cardSection).text("Breakdown of stats winning");
  //append tag 
    $(resultsDiv).append(resultsCard,cardDivider,cardSection);

  };
const path = anime.path('ellipse');
    anime({
        targets: '.basketball',
        translateY: path('y'),
        translateX: path('x'),
        duration: 5000,
            rotate:{
            value: '1turn',
            easing: 'cubicBezier(.5, .05, .1, .3)'
            },
            easing: 'linear',
            loop: true
    });
});
</script>


<!-- create function to compare teams stats 
    third party api get call to grab stats for players 
    db get call to receive player ids for teams 
    view route to populate team1 and team 2 dropdown 
    onclick for challenge button 
    validation for team1 vs team 2 cannot be the same 
    --> 